long long gcd_by_extended_euclid(long long a, long long b, long long &x, long long &y)
{
	// this algorithm find the gcd(a,b) as a linear combination of a & b
    // i.e. gcd(a,b) = ax + by
   
	// base condition
	if(b==0)
	{
       x=1; y=0;
       return a;
	}

	long long x1, y1; //to store results of recursive call  
	long long g=gcd_by_extended_euclid(b, a%b, x1, y1);
	x=y1; //update x and y using results of recursive call 
	y=x1 - floor(a/b)*y1;
	return g;
}

// Time Complexity: O(log₂(max(a,b)))

/*Major applications of Extended eucledian algorithm ⟶
  • Finding modulo multiplicative inverse under some modulo.
  • In linear diophantine eqⁿˢ.
*/
/*PROBLEM STATEMENT: Given an array of integers, find the nearest smaller number for every element such that 
                     the smaller element is on left side.
*/

vector<int> nsl(vector<int> &v)
{
	if(v.size()<=0)
		return v;

	// to store the final result
	vector<int> res(v.size());

	stack<int> st; 

	for(int i=0; i<v.size(); i++)
	{
		if(st.empty())
			res[i]=-1;

		else if(st.top()<v[i])
			res[i]=st.top();

		else if(st.top()>=v[i])
		{
			while(!st.empty() && st.top()>=v[i])
				st.pop();

			if(st.empty())
				res[i]=-1;
			else res[i]=st.top();
		}

		st.push(v[i]);
	}

	// return the final res vector
	return res;
}

/*# Time Complexity: O(n), where n is v.size()
  # Space Complexity: O(n): The worst case occurs when all elements are sorted in increasing order,
   						    as in this case the stack size will be 'n'.
*/
/*PROBLEM: Given an array arr[] of length n and an integer sum, the task is to find the 
           number of subsets with sum equal to sum.
           All the elements of the array are non -ve.
*/

long long countSubsets(vector<long long> &v, long long sum, long long n)
{
	//initialisation of dp matrix
	for(long long i=0; i<(n+1); i++) dp[i][0]=1; //if sum is 0, then only 1 subset is possible(i.e. Ã˜) 
	for(long long j=1; j<(sum+1); j++) dp[0][j]=0;

	//choice diagram code iterative version
	for(long long i=1; i<(n+1); i++)
	{
	   for(long long j=1; j<(sum+1); j++)
	   {
	      if(v[i-1]<=j)
	         dp[i][j]=dp[i-1][j-v[i-1]] + dp[i-1][j];

	      else //when v[i-1]>sum
	         dp[i][j]=dp[i-1][j];
	   }
	}

	return dp[n][sum];
}

//dp[][] is a 2 D global matrix/vector of vectors, with size (n+1)*(sum+1), where n is the size of v vector.
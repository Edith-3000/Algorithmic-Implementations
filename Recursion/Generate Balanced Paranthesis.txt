void genParenthesis(string op, int open, int close)
{
	// base condition(s)
	if(open==0 && close==0)
	{
		cout<<op<<" ";
		return;
	}

	if(open>0)
	{
		string op1=op;
		op.push_back('(');
		genParenthesis(op1, open-1, close);
	}

	if(close>open)
	{
		string op2=op;
		op2.push_back(')');
		genParenthesis(op2, open, close-1);
	}
}

// op is initialised as empty string and open=n and close=n in the main() f‚Åø
// where n is #pairs of open and close brackets
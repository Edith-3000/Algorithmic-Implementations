/*QUESTION: Given a positive integer n, print all n digit binary numbers having more or equal number of 1’s than 0’s 
  for any prefix of the number.
*/

void solve(string op, long long ones, long long zeros, long long n, vector<string> &v)
{
	//implemented using O/P - I/P method for recursion
	//base condition of recursion
	if(n==0)
	{
       v.push_back(op); //pushing the answer in v
       return;
	}

	//choice for including 1 in the o/p is always available
	string op1=op;
	op1.push_back('1');
	solve(op1, ones+1, zeros, n-1, v);

	//choice for including 0 in the o/p is only available when #1's > #0's
	if(ones>zeros)
	{
	   string op2=op;
	   op2.push_back('0');
	   solve(op2, ones, zeros+1, n-1, v);
	}
}

/*here ones, zeros stores the #1's and #0's respectively at each level of the recursion tree,
  both are initialized to 0 int the main function.
  op is string which is empty initially in the main function.
  v stores all the answers i.e. all n digit binary nos. which saisfy the given constraints.
*/

long long first_occur(vector<long long> &v, long long k)
{
   long long start=0, end=v.size()-1;
   long long res=-1; //for storing the result

   while(start<=end)
   {
      long long mid=start+(end-start)/2; //to avoid overflow

      if(v[mid]==k) 
      {
         res=mid;
         end=mid-1;
      }

      else if(k>v[mid]) start=mid+1;
      else end=mid-1;
   }
   
   return res; 
}

long long last_occur(vector<long long> &v, long long k)
{
   long long start=0, end=v.size()-1;
   long long res=-1; //for storing the result

   while(start<=end)
   {
      long long mid=start+(end-start)/2; //to avoid overflow

      if(v[mid]==k) 
      {
         res=mid;
         start=mid+1;
      }

      else if(k>v[mid]) start=mid+1;
      else end=mid-1;
   }
   
   return res; 
}

long long count_of_element(vector<long long> &v, long long k)
{
	long long first=first_occur(v, k);
    long long last=last_occur(v, k);

    return (last-first+1);
}
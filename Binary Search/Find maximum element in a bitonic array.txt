/*A Bitonic Sequence is a sequence of numbers which is first strictly increasing (i.e. monotonically increasing) 
  then after a point strictly decreasing (i.e. monotonically decreasing).

  Now, Maximum element in a bitonic array = Peak element of the bitonic array.
*/

long long peak_element(vector<long long> &v)
{
	long long start=0, end=v.size()-1;

	while(start<=end)
	{
	   long long mid=start+(end-start)/2;

	   if(mid>0 && mid<(v.size()-1))
	   {
	      if(v[mid]>v[mid-1] && v[mid]>v[mid+1]) return v[mid];
	      else if(v[mid]<v[mid+1]) start=mid+1;
	      else end=mid-1;
	   }

	   else if(mid==0) //to handle corner cases
	   {
	      if(v[mid]>v[1]) return v[mid];
	      else return v[1];
	   }

	   else  //if(mid==v.size()-1) (to handle corner cases)
	   {
           if(v[mid]>v[v.size()-2]) return v[mid];
           else return v[v.size()-2];
	   }
	}

	return -1; //if no peak element is present in the array
}

long long max_ele_in_bitonic_arr(vector<long long> &v)
{
	return peak_element(v);
}
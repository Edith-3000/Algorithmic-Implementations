*/Given an array which is sorted, but after sorting some elements are moved to either of the adjacent positions, i.e., arr[i] 
  may be present at arr[i+1] or arr[i-1]. Write an efficient function to search an element in this array. Basically the element
  arr[i] can only be swapped with either arr[i+1] or arr[i-1].
*/

long long bin_search_for_nearly_sorted(vactor<long long> &v, long long k)
{
	long long start=0, end=v.size()-1;

	while(start<=end)
	{
	   long long mid=start+(end-start)/2;

	   if(v[mid]==k) return mid;
	   else if(mid-1>=start && v[mid-1]==k) return mid-1; 
	   else if(mid+1<=end && v[mid+1]==k) return mid+1;

	   else if(k>v[mid]) start=mid+2;
	   else end=mid-2;
	}

	return -1; //if element not found
}
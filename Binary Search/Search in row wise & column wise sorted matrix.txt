/*The below algorithm for rows and columns sorted in ASCENDING ORDER, eg. 10, 20, 30, 40
                                                                          15, 25, 35, 45
                                                                          27, 29, 37, 48
                                                                          32, 33, 39, 50
  Slightly modify the code for DESCENDING ORDER, if required.
*/

vector<long long> find_matrix(vector<vector<long long>> &v, long long k)
{
	long long r=v.size(); //to store #rows
	long long c=v[0].size(); //to store #columns
	long long i=0, j=c-1; //to start searching from top right corner of matrix
    
    vector<long long> res; //for storing the indices of the element to be found

	while(i<=(r-1) && j>=0)
	{
	   if(v[i][j]==k)
	   {
           res._push_back(i);
           res._push_back(j);
           return res;
	   }

	   else if(k<v[i][j]) j--;
	   else i++;
	}

	res._push_back(-1);
    res._push_back(-1);
    return res; //if key not present return (-1, -1)
}

//Time Complexity: O(n+m), n = # rows, m = # columns.
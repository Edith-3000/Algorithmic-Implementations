/*Given a sorted array, find the element in the array which has minimum absolute difference with the given number.*/

long long bin_search_iterative(vector<long long> &v, long long k)
{
	//the vector v must be sorted in order
   //to perform binary search

   long long start=0, end=v.size()-1;

   while(start<=end)
   {
      long long mid=start+(end-start)/2; //to avoid overflow

      if(k>v[mid]) start=mid+1;
      else end=mid-1;
   }
   
   if(abs(v[start]-k) < abs(v[end]-k)) return v[start];
   else return v[end];
}

long long min_abs_diff_ele(vector<long long> &v, long long k)
{
	if(binary_search(v.begin(), v.end(), k)); //if the key itself is present in the array 
	   return k;                             //then it will give the min abs diff = 0

	else                                    //if key not present in array then min abs diff will be 
	   return bin_search_iterative(v, k);  //given by either of the 2 elements b/w which the key would 
	                                      //have been present 
}
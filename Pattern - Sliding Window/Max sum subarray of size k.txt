/*PROBLEM STATEMENT: Given an array of integers of size ‘n’. Calculate the maximum sum of ‘k’ consecutive 
                     elements in the array.
*/

int maxSumSubarrOfSizeK(vector<int> &v, int k)
{
    if(n<k) return -1;

    // to store the final result
	int res=INT_MIN;

	// to store the sum of elements in the 
	// sliding window at any point of time
	int sum=0;

	int i=0; // start index of window
	int j=0; // end index of window

	while(j<v.size())
	{
	   sum+=v[j];

	   if((j-i+1) < k)
	      j++;

	   else if((j-i+1)==k)
	   {
	      res=max(res, sum);
	      sum-=v[i];
	      i++;
	      j++;
	   }
	}

	// return final result
	return res;
}

// Time Complexity = O(n).
// Space Complexity is O(1).
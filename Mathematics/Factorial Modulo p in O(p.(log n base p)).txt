/*to calculate n! mod p, here p need not to be a prime no.,
  it can be any +ve integer.
  This Algorithm is suitable for relatively small values of p.
  Otherwise Runtime may Exceed.
  Time complexity of the Algorithm = O(p*(log n to the base p))
*/

long long fact_mod_p(long long n, long long p)
{
	if(n>=p) return 0; //p is present in the factorial so
	                  //result will always be 0

	long long res=1; //initialize result
	while(n>1)
	{
	   res=res * ((n/p)%2 ? (p-1) : 1)%p;
	   
	   for(long long i=2; i<=n%p; i++)
	     res=(res*i)%p;

       n/=p;
	}

	return res%p;
}


